@use '../abstracts' as dc;

.dc-switch {
  --dc-selection-control-size: var(--dc-switch-width);
}

.dc-switch {
  position: relative;
}

.dc-switch__input {
  @include dc.visually-hidden;
}

.dc-switch__check {
  position: relative;
  display: inline-flex;
  box-sizing: border-box;
  width: var(--dc-switch-width);
  height: var(--dc-switch-height);
  cursor: pointer;
  transition: dc.$transition-quick;
  transition-property: border-color, background-color;
  border-radius: calc(var(--dc-switch-height) / 2);
  background: var(--dc-switch-bg);
}

.dc-switch__check::after {
  position: absolute;
  top: calc((var(--dc-switch-height) - var(--dc-switch-check-size)) / 2);
  left: calc((var(--dc-switch-height) - var(--dc-switch-check-size)) / 2);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  width: var(--dc-switch-check-size);
  height: var(--dc-switch-check-size);
  content: '';
  transition: inherit;
  transition-property: transform, border-color;
  border-radius: 50%;
  background: var(--dc-input-accent-secondary-color);
  box-shadow: dc.$shadow-sm, dc.$shadow-md;
}

.dc-switch__input:checked + .dc-switch__check {
  background: var(--dc-input-accent-color);
}

.dc-switch__input:checked + .dc-switch__check::after {
  // noinspection CssInvalidFunction
  transform: translateX(calc(var(--dc-switch-width) - var(--dc-switch-height)));
}

.dc-switch__input:focus + .dc-switch__check {
  box-shadow: 0 0 0 3px var(--dc-focus-ring-color);
}

.dc-switch__input:disabled + .dc-switch__check {
  cursor: default;
  opacity: var(--dc-disabled-state-opacity);
}
