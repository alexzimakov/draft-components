@use 'sass:math';

@function px-to-rem($size, $context: 16px) {
  // TODO: Check if WebStorm supports `math.div`.
  //noinspection CssInvalidFunction
  @return math.div($size, $context) * 1rem;
}

@function rem-to-px($size, $context: 16px) {
  //noinspection CssInvalidFunction
  @return math.div($size, 1rem) * $context;
}

@function px-to-em($size, $context: 16px) {
  //noinspection CssInvalidFunction
  @return math.div($size, $context) * 1em;
}

@function em-to-px($size, $context: 16px) {
  //noinspection CssInvalidFunction
  @return math.div($size / 1em) * $context;
}

// https://css-tricks.com/snippets/sass/strip-unit-function/
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    //noinspection CssInvalidFunction
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}

// https://gist.github.com/JacobDB/0ffffaf8e772c12acf7102edb8a302be
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

@function url-encode($string) {
  $map: (
    '%': '%25',
    '<': '%3C',
    '>': '%3E',
    ' ': '%20',
    '!': '%21',
    '*': '%2A',
    "'": '%27',
    '"': '%22',
    '(': '%28',
    ')': '%29',
    ';': '%3B',
    ':': '%3A',
    '@': '%40',
    '&': '%26',
    '=': '%3D',
    '+': '%2B',
    '$': '%24',
    ',': '%2C',
    '/': '%2F',
    '?': '%3F',
    '#': '%23',
    '[': '%5B',
    ']': '%5D',
  );

  $new: $string;

  @each $search, $replace in $map {
    $new: str-replace($new, $search, $replace);
  }

  @return $new;
}

@function inline-svg($string) {
  @return url('data:image/svg+xml,#{url-encode($string)}');
}
